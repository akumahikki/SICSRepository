.TH "PatternMatrix" 3 "Tue Sep 23 2014" "Version 1.00" "SICS IRT" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PatternMatrix \- Class for holding binary matrices in the array of patterns of bitsets form\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PatternMatrix\&.h>\fP
.PP
Inherits \fBDataSet\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPatternMatrix\fP ()"
.br
.ti -1c
.RI "void \fBresetIterator\fP ()"
.br
.RI "\fIuse this when reading in order \fP"
.ti -1c
.RI "bool \fBcheckEnd\fP ()"
.br
.ti -1c
.RI "void \fBiterate\fP ()"
.br
.ti -1c
.RI "void \fBvalues\fP ()"
.br
.ti -1c
.RI "boost::dynamic_bitset \fBgetCurrentBitSet\fP ()"
.br
.ti -1c
.RI "long int \fBgetCurrentFrequency\fP ()"
.br
.ti -1c
.RI "void \fBpush\fP (boost::dynamic_bitset<>)"
.br
.ti -1c
.RI "void \fBpush\fP (boost::dynamic_bitset<>, int)"
.br
.RI "\fIUse this to fill the pattern matrix\&. \fP"
.ti -1c
.RI "void \fBflush\fP ()"
.br
.RI "\fIUse this to fill the pattern matrix many times with a pattern\&. \fP"
.ti -1c
.RI "long int & \fBoperator()\fP (boost::dynamic_bitset<>)"
.br
.RI "\fIUse this to clean matrix\&. \fP"
.ti -1c
.RI "int \fBcountItems\fP () const "
.br
.RI "\fI\fBOutput\fP operator\&. \fP"
.ti -1c
.RI "int \fBcountIndividuals\fP () const "
.br
.ti -1c
.RI "virtual \fB~PatternMatrix\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::map< boost::dynamic_bitset<>, long int >::const_iterator \fBiterator\fP"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "map< boost::dynamic_bitset<>, long int > \fBmatrix\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &, \fBPatternMatrix\fP &)"
.br
.RI "\fIUse this to access a specific pattern frecuency and modify it\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Class for holding binary matrices in the array of patterns of bitsets form\&. 
.PP
Definition at line 20 of file PatternMatrix\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PatternMatrix::PatternMatrix ()"

.PP
Definition at line 10 of file PatternMatrix\&.cpp\&.
.SS "PatternMatrix::~PatternMatrix ()\fC [virtual]\fP"

.PP
Definition at line 32 of file PatternMatrix\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "bool PatternMatrix::checkEnd ()\fC [inline]\fP"

.PP
Definition at line 32 of file PatternMatrix\&.h\&.
.PP
Referenced by EMEstimation::stepE()\&.
.SS "int PatternMatrix::countIndividuals () const\fC [virtual]\fP"

.PP
Implements \fBDataSet\fP\&.
.PP
Definition at line 20 of file PatternMatrix\&.cpp\&.
.SS "int PatternMatrix::countItems () const\fC [virtual]\fP"

.PP
\fBOutput\fP operator\&. 
.PP
Implements \fBDataSet\fP\&.
.PP
Definition at line 15 of file PatternMatrix\&.cpp\&.
.PP
Referenced by DichotomousModel::countItems(), and EMEstimation::stepE()\&.
.SS "void PatternMatrix::flush ()"

.PP
Use this to fill the pattern matrix many times with a pattern\&. 
.PP
Definition at line 44 of file PatternMatrix\&.cpp\&.
.SS "boost::dynamic_bitset PatternMatrix::getCurrentBitSet ()\fC [inline]\fP"

.PP
Definition at line 35 of file PatternMatrix\&.h\&.
.PP
Referenced by EMEstimation::stepE()\&.
.SS "long int PatternMatrix::getCurrentFrequency ()\fC [inline]\fP"

.PP
Definition at line 36 of file PatternMatrix\&.h\&.
.PP
Referenced by EMEstimation::stepE()\&.
.SS "void PatternMatrix::iterate ()\fC [inline]\fP"

.PP
Definition at line 33 of file PatternMatrix\&.h\&.
.PP
Referenced by EMEstimation::stepE()\&.
.SS "long int & PatternMatrix::operator() (boost::dynamic_bitset<> n)"

.PP
Use this to clean matrix\&. 
.PP
Definition at line 48 of file PatternMatrix\&.cpp\&.
.SS "void PatternMatrix::push (boost::dynamic_bitset<> n)"

.PP
Definition at line 36 of file PatternMatrix\&.cpp\&.
.PP
Referenced by Input::importCSV()\&.
.SS "void PatternMatrix::push (boost::dynamic_bitset<> n, int k)"

.PP
Use this to fill the pattern matrix\&. 
.PP
Definition at line 40 of file PatternMatrix\&.cpp\&.
.SS "void PatternMatrix::resetIterator ()\fC [inline]\fP"

.PP
use this when reading in order 
.PP
Definition at line 31 of file PatternMatrix\&.h\&.
.PP
Referenced by EMEstimation::stepE()\&.
.SS "void PatternMatrix::values ()\fC [inline]\fP"

.PP
Definition at line 34 of file PatternMatrix\&.h\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream & out, \fBPatternMatrix\fP & pm)\fC [friend]\fP"

.PP
Use this to access a specific pattern frecuency and modify it\&. 
.PP
Definition at line 52 of file PatternMatrix\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "std::map<boost::dynamic_bitset<>, long int>::const_iterator PatternMatrix::iterator"

.PP
Definition at line 30 of file PatternMatrix\&.h\&.
.PP
Referenced by operator<<()\&.
.SS "map<boost::dynamic_bitset<>, long int> PatternMatrix::matrix\fC [private]\fP"

.PP
Definition at line 23 of file PatternMatrix\&.h\&.
.PP
Referenced by operator<<()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SICS IRT from the source code\&.
